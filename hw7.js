//ДЗ 1
// Написати свою реалізацію функції isNaN.
// Умови виконання ДЗ
// Не використовувати функції або інші матеріали які ми не вивчали

/*function myIsNaN(value) {
    // Використовуємо оператор `!==` для порівняння типів значень та знаку NaN.
    return value !== value;
}

// Приклади використання
console.log(myIsNaN(5));
console.log(myIsNaN("abc"));
console.log(myIsNaN(NaN));
console.log(myIsNaN(undefined))

 */

/*ДЗ 2

Необхідно написати власну реалізацію функцій padEnd та padStart, але у вас повинна бути одна функція pad(‘qwerty’, ‘+’, true), яка приймає чотири аргументи:

    рядок, до якого буде додаватися символ.
    символ, який буде додаватися.
    Скільки додавати символів
булеве значення, яке вказує, куди додавати символ. Якщо true, то до початку, якщо false, то в кінець.
    Останній аргумент повинен працювати як і в оригінальній функції, а саме якщо наш рядок з 5 символів, а ви вказуєте знаачення 6, то додаєте тільки один символ
Умови виконання ДЗ

Функція повина повертати новий рядок

 */
/*function pad(str, symbol, length, addToStart) {
    // Перевірка, чи вже рядок має більше або рівно символів, які потрібно додати
    if (str.length >= length) {
        return str;
    }

    const padding = symbol.repeat(length - str.length);

    if (addToStart) {
        return padding + str;
    } else {
        return str + padding;
    }
}

// Приклади використання
console.log(pad('qwerty', '+', 10, true));  // Додає символи до початку: "++++qwerty"
console.log(pad('qwerty', '+', 10, false)); // Додає символи до кінця: "qwerty++++"

 */

/*ДЗ3

Перевірка теорії ймовірності. Напишіть функцію яка буде генерувати певну кількість випадкових чисел в діапазоні від 100 до 1000 включно. Порахувати кількість парних та непарних серед них. Обчислити відсоткове співвідношення - чи буде воно близьке до 50%50? Приклад функції checkProbabilityTheory(count). Парметр count буде вказувати скільки разів буде генеруватися випадкове число.

    Умови виконання ДЗ

Функція виводить інформацію
Кількість згенерованих чисел: кількість чисел
Парних чисел: кількість парних чисел
Не парних чисел: кількість не парних чисел
Відсоток парних до не парних:

 */


function checkProbabilityTheory(count) {
    let evenCount = 0; //змінна для підрахунку кількості парних чисел
    let oddCount = 0; //змінна для підрахунку кількості непарних чисел
    // цикл для генераціі випадкових чисел
    for (let i = 0; i < count; i++) {
        const randomNumber = Math.floor(Math.random() * 901) + 100; // Генеруємо від 100 до 1000 та округляємо результат до найближчого числа
        if (randomNumber % 2 === 0) {
            evenCount++;
        } else {
            oddCount++;
        }
    }

    const evenPercentage = (evenCount / count) * 100;
    const oddPercentage = (oddCount / count) * 100;

    console.log("Кількість згенерованих чисел:", count);
    console.log("Парних чисел:", evenCount);
    console.log("Не парних чисел:", oddCount);
    console.log("Відсоток парних до не парних:", evenPercentage.toFixed(2) + "% : " + oddPercentage.toFixed(2) + "%");
}

// Приклад використання:
checkProbabilityTheory(1000); // Перевірка на 1000 генерованих числах




